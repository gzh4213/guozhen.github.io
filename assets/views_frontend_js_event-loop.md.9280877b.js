import{_ as e,o as a,c as t,M as o}from"./chunks/framework.3d15f885.js";const m=JSON.parse('{"title":"事件循环","description":"","frontmatter":{},"headers":[],"relativePath":"views/frontend/js/event-loop.md","filePath":"views/frontend/js/event-loop.md","lastUpdated":1700905769000}'),r={name:"views/frontend/js/event-loop.md"},n=o('<h1 id="事件循环" tabindex="-1">事件循环 <a class="header-anchor" href="#事件循环" aria-label="Permalink to &quot;事件循环&quot;">​</a></h1><h2 id="进程" tabindex="-1">进程 <a class="header-anchor" href="#进程" aria-label="Permalink to &quot;进程&quot;">​</a></h2><p>每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意</p><h2 id="线程" tabindex="-1">线程 <a class="header-anchor" href="#线程" aria-label="Permalink to &quot;线程&quot;">​</a></h2><p>运行代码的任务成为线程，一个进程至少有一个线程，如果程序需要同时执行多块代码，主线程就会启动更多的线程来执行代码，所有一个进程中可以包含多个进程</p><h2 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-label="Permalink to &quot;浏览器&quot;">​</a></h2><p>浏览器是一个多进程多线程的应用程序</p>',7),s=[n];function i(d,l,c,_,h,p){return a(),t("div",null,s)}const u=e(r,[["render",i]]);export{m as __pageData,u as default};
