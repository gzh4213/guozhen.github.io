import{_ as s,o as a,c as n,M as p}from"./chunks/framework.3d15f885.js";const B=JSON.parse('{"title":"commander","description":"","frontmatter":{},"headers":[],"relativePath":"views/node/npm/commander.md","filePath":"views/node/npm/commander.md","lastUpdated":1700905769000}'),l={name:"views/node/npm/commander.md"},e=p(`<h1 id="commander" tabindex="-1">commander <a class="header-anchor" href="#commander" aria-label="Permalink to &quot;commander&quot;">​</a></h1><p>完整的 node.js 命令行解决方案</p><p><a href="https://github.com/tj/commander.js" target="_blank" rel="noreferrer">官方地址</a></p><h2 id="声明program变量" tabindex="-1">声明program变量 <a class="header-anchor" href="#声明program变量" aria-label="Permalink to &quot;声明program变量&quot;">​</a></h2><p>为简化使用，Commander 提供了一个全局对象。本文档的示例代码均按此方法使用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ECMAScript (.mjs)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">program</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">commander</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">program</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">version</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h2><p>Commander 使用<code>.option()</code>方法来定义选项，同时可以附加选项的简介。每个选项可以定义一个短选项名称（-后面接单个字符）和一个长选项名称（--后面接一个或多个单词），使用逗号、空格或|分隔。</p><p>解析后的选项可以通过Command对象上的.opts()方法获取，同时会被传递给命令处理函数。</p><p>对于多个单词的长选项，选项名会转为驼峰命名法（camel-case），例如<code>--template-engine</code>选项可通过<code>program.opts().templateEngine</code>获取。</p><p>选项及其选项参数可以用空格分隔，也可以组合成同一个参数。选项参数可以直接跟在短选项之后，也可以在长选项后面加上 <code>=</code>。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">serve -p 80</span></span>
<span class="line"><span style="color:#babed8;">serve -p80</span></span>
<span class="line"><span style="color:#babed8;">serve --port 80</span></span>
<span class="line"><span style="color:#babed8;">serve --port=80</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>--</code>可以标记选项的结束，后续的参数均不会被命令解释，可以正常使用。</p><p>默认情况下，选项在命令行中的顺序不固定，一个选项可以在其他参数之前或之后指定。</p><h3 id="常用选项类型-boolean-型选项和带参数选项" tabindex="-1">常用选项类型，boolean 型选项和带参数选项 <a class="header-anchor" href="#常用选项类型-boolean-型选项和带参数选项" aria-label="Permalink to &quot;常用选项类型，boolean 型选项和带参数选项&quot;">​</a></h3><p>有两种最常用的选项，一类是 boolean 型选项，选项无需配置参数，另一类选项则可以设置参数（使用尖括号声明在该选项后，如<code>--expect &lt;value&gt;</code>）。如果在命令行中不指定具体的选项及参数，则会被定义为<code>undefined</code>。</p><p>示例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">program</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-d, --debug</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">output extra debugging</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-s, --small</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">small pizza size</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-p, --pizza-type &lt;type&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">flavour of pizza</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#BABED8;">(process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">argv)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> options </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">opts</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">debug) console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(options)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pizza details:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">small) console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">- small pizza size</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> (options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">pizzaType) console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">- </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">pizzaType</span><span style="color:#89DDFF;">}\`</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pizza-options</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span></span>
<span class="line"><span style="color:#FFCB6B;">error:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">option</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-p, --pizza-type &lt;type&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">argument</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">missing</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pizza-options</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vegetarian</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">debug:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">small:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">true</span><span style="color:#C3E88D;">,</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pizzaType:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vegetarian</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">pizza</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">details:</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">small</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pizza</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">size</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">vegetarian</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pizza-options</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--pizza-type=cheese</span></span>
<span class="line"><span style="color:#FFCB6B;">pizza</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">details:</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">cheese</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>多个布尔短选项可以在破折号之后组合在一起，并且可以跟一个取值的单一选项。 例如 <code>-d -s -p cheese</code> 可以写成 <code>-ds -p cheese</code> 甚至 <code>-dsp cheese</code>。</p><p>具有预期选项参数的选项是贪婪的，并且无论值如何，都会消耗参数。 所以 <code>--id -xyz</code> 读取 <code>-xyz</code> 作为选项参数。</p><p>通过<code>program.parse(arguments)</code>方法处理参数，没有被使用的选项会存放在<code>program.args</code>数组中。该方法的参数是可选的，默认值为<code>process.argv</code>。</p><h3 id="选项的默认值" tabindex="-1">选项的默认值 <a class="header-anchor" href="#选项的默认值" aria-label="Permalink to &quot;选项的默认值&quot;">​</a></h3><p>选项可以设置一个默认值。</p><p>示例代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">program</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">option</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-c, --cheese &lt;type&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">add the specified type of cheese</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">cheese: </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">opts</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">cheese</span><span style="color:#89DDFF;">}\`</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$ pizza-options</span></span>
<span class="line"><span style="color:#babed8;">cheese: blue</span></span>
<span class="line"><span style="color:#babed8;">$ pizza-options --cheese stilton</span></span>
<span class="line"><span style="color:#babed8;">cheese: stilton</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="版本选项" tabindex="-1">版本选项 <a class="header-anchor" href="#版本选项" aria-label="Permalink to &quot;版本选项&quot;">​</a></h3><p><code>.version()</code>方法可以设置版本，其默认选项为-V和--version，设置了版本后，命令行会输出当前的版本号。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">program</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">version</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$ ./examples/pizza -V</span></span>
<span class="line"><span style="color:#babed8;">0.0.1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>版本选项也支持自定义设置选项名称，可以在<code>.version()</code>方法里再传递一些参数（长选项名称、描述信息），用法与<code>.option()</code>方法类似。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">program</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">version</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0.0.1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-v, --vers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">output the current version</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><p>通过<code>.command()</code>或<code>.addCommand()</code>可以配置命令，有两种实现方式：为命令绑定处理函数，或者将命令单独写成一个可执行文件（详述见后文）。</p><p><code>.command()</code>的第一个参数为命令名称。命令参数可以跟在名称后面，也可以用<code>.argument()</code>单独指定。参数可为必选的（尖括号表示）、可选的（方括号表示）或变长参数（点号表示，如果使用，只能是最后一个参数）。</p><p>使用<code>.addCommand()</code>向program增加配置好的子命令。</p>`,37),o=[e];function r(c,t,i,D,y,F){return a(),n("div",null,o)}const m=s(l,[["render",r]]);export{B as __pageData,m as default};
